"""
Django settings for etr_benchmarking_basic project.

Generated by 'django-admin startproject' using Django 1.11.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

"""Follow Setting are TTAA specific"""
# Override message name to match bootstraps
from django.contrib.messages import constants as messages

# loging options
import logging.config
from ttaa_base.logger.config import get_loggers


LOGGING_CONFIG = None  # Deactivate default logging
logging.config.dictConfig(get_loggers())
"""End of TTAA"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '60q6x10)897s_x3=4ez43yhtdh-aa$=&#!(3nul^_o$f7+2#n)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'etr_benchmarking',
    #'predictETR',
    'ttaa_base'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'ttaa_base.middleware.session.SessionExpirationMiddleware',
    'ttaa_base.middleware.password_change.PasswordChangeMiddleware',
    'ttaa_base.middleware.admin_tool_lock.AdminToolLock'
]

LOGIN_URL = '/base/auth/login'

ROOT_URLCONF = 'etr_benchmarking_basic.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['etr_benchmarking/templates','ttaa_base/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'etr_benchmarking_basic.context_processors.app_info_menu',
            ],
        },
    },
]

WSGI_APPLICATION = 'etr_benchmarking_basic.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# #############################################################
# #Do not modify beyond this line unless you know what you do #
# #############################################################

# Django-> bootstrap messages types: overrides the normal tags of django
# messages to be compatible with bootstrap
MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}

# cookies
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# SSL protection
# Https auto redirection: in debug mode it will not redirect, but in no
# debug mode it will redirect. There is no ssl certificate in debug mode
SECURE_SSL_REDIRECT = not DEBUG

# Cross-Frame Scripting Protection
X_FRAME_OPTIONS = 'DENY'

# use secure cookies and CSRF
SESSION_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG